# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\Ui\MainwindowUi.ui'
#
# Created by: PyQt5 UI code generator 5.9.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1202, 842)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.splitter = QtWidgets.QSplitter(self.centralwidget)
        self.splitter.setOrientation(QtCore.Qt.Vertical)
        self.splitter.setObjectName("splitter")
        self.scrollArea = QtWidgets.QScrollArea(self.splitter)
        self.scrollArea.setEnabled(True)
        self.scrollArea.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.scrollArea.setFrameShadow(QtWidgets.QFrame.Plain)
        self.scrollArea.setLineWidth(0)
        self.scrollArea.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setAlignment(QtCore.Qt.AlignCenter)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 1165, 595))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.textBrowser = QtWidgets.QTextBrowser(self.splitter)
        self.textBrowser.setEnabled(True)
        self.textBrowser.setMinimumSize(QtCore.QSize(0, 10))
        self.textBrowser.setMaximumSize(QtCore.QSize(16777215, 150))
        self.textBrowser.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.textBrowser.setObjectName("textBrowser")
        self.verticalLayout.addWidget(self.splitter)
        self.progress_OK = QtWidgets.QHBoxLayout()
        self.progress_OK.setObjectName("progress_OK")
        self.progressBar = QtWidgets.QProgressBar(self.centralwidget)
        self.progressBar.setProperty("value", 0)
        self.progressBar.setObjectName("progressBar")
        self.progress_OK.addWidget(self.progressBar)
        self.okPushButton = QtWidgets.QPushButton(self.centralwidget)
        self.okPushButton.setObjectName("okPushButton")
        self.progress_OK.addWidget(self.okPushButton)
        self.stopPushButton = QtWidgets.QPushButton(self.centralwidget)
        self.stopPushButton.setObjectName("stopPushButton")
        self.progress_OK.addWidget(self.stopPushButton)
        self.deletePushButton = QtWidgets.QPushButton(self.centralwidget)
        self.deletePushButton.setObjectName("deletePushButton")
        self.progress_OK.addWidget(self.deletePushButton)
        self.verticalLayout.addLayout(self.progress_OK)
        self.verticalLayout_4.addLayout(self.verticalLayout)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1202, 21))
        self.menubar.setObjectName("menubar")
        self.menuPreprocessing = QtWidgets.QMenu(self.menubar)
        self.menuPreprocessing.setObjectName("menuPreprocessing")
        self.menuSpectralIndices = QtWidgets.QMenu(self.menubar)
        self.menuSpectralIndices.setObjectName("menuSpectralIndices")
        self.menuRegression = QtWidgets.QMenu(self.menubar)
        self.menuRegression.setObjectName("menuRegression")
        self.menuDimensionality_Reduction = QtWidgets.QMenu(self.menubar)
        self.menuDimensionality_Reduction.setObjectName("menuDimensionality_Reduction")
        self.menuClassification = QtWidgets.QMenu(self.menubar)
        self.menuClassification.setObjectName("menuClassification")
        self.menuImageUtility = QtWidgets.QMenu(self.menubar)
        self.menuImageUtility.setObjectName("menuImageUtility")
        self.menuSimulation = QtWidgets.QMenu(self.menubar)
        self.menuSimulation.setObjectName("menuSimulation")
        self.menuSpectralLibrary = QtWidgets.QMenu(self.menubar)
        self.menuSpectralLibrary.setObjectName("menuSpectralLibrary")
        self.menutToolAbout_Help = QtWidgets.QMenu(self.menubar)
        self.menutToolAbout_Help.setObjectName("menutToolAbout_Help")
        self.menuTimeSeries = QtWidgets.QMenu(self.menubar)
        self.menuTimeSeries.setObjectName("menuTimeSeries")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        MainWindow.setMenuBar(self.menubar)
        self.actionLoad_Preprocessing = QtWidgets.QAction(MainWindow)
        self.actionLoad_Preprocessing.setObjectName("actionLoad_Preprocessing")
        self.actionView_Data = QtWidgets.QAction(MainWindow)
        self.actionView_Data.setObjectName("actionView_Data")
        self.actionSpectral_Indices = QtWidgets.QAction(MainWindow)
        self.actionSpectral_Indices.setObjectName("actionSpectral_Indices")
        self.actionMultivariate_Regression = QtWidgets.QAction(MainWindow)
        self.actionMultivariate_Regression.setObjectName("actionMultivariate_Regression")
        self.actionUnivariate_Regression = QtWidgets.QAction(MainWindow)
        self.actionUnivariate_Regression.setObjectName("actionUnivariate_Regression")
        self.actionNewResampling = QtWidgets.QAction(MainWindow)
        self.actionNewResampling.setObjectName("actionNewResampling")
        self.actionDimension_Reduction = QtWidgets.QAction(MainWindow)
        self.actionDimension_Reduction.setObjectName("actionDimension_Reduction")
        self.actionSpectral_Distance = QtWidgets.QAction(MainWindow)
        self.actionSpectral_Distance.setObjectName("actionSpectral_Distance")
        self.actionClassification = QtWidgets.QAction(MainWindow)
        self.actionClassification.setObjectName("actionClassification")
        self.actionTimeSeries = QtWidgets.QAction(MainWindow)
        self.actionTimeSeries.setObjectName("actionTimeSeries")
        self.actionNewSigreader = QtWidgets.QAction(MainWindow)
        self.actionNewSigreader.setObjectName("actionNewSigreader")
        self.actionspectraevolutionreader = QtWidgets.QAction(MainWindow)
        self.actionspectraevolutionreader.setObjectName("actionspectraevolutionreader")
        self.actionVisualizer = QtWidgets.QAction(MainWindow)
        self.actionVisualizer.setObjectName("actionVisualizer")
        self.actionSVCSpectral_Indices = QtWidgets.QAction(MainWindow)
        self.actionSVCSpectral_Indices.setObjectName("actionSVCSpectral_Indices")
        self.actionCSVSpectral_Indices = QtWidgets.QAction(MainWindow)
        self.actionCSVSpectral_Indices.setObjectName("actionCSVSpectral_Indices")
        self.actionFgcc = QtWidgets.QAction(MainWindow)
        self.actionFgcc.setObjectName("actionFgcc")
        self.actionPy6sTimeSeries = QtWidgets.QAction(MainWindow)
        self.actionPy6sTimeSeries.setObjectName("actionPy6sTimeSeries")
        self.actionProsail = QtWidgets.QAction(MainWindow)
        self.actionProsail.setObjectName("actionProsail")
        self.actionSpectraSimulation = QtWidgets.QAction(MainWindow)
        self.actionSpectraSimulation.setObjectName("actionSpectraSimulation")
        self.actionSpectralLibrarySearch = QtWidgets.QAction(MainWindow)
        self.actionSpectralLibrarySearch.setObjectName("actionSpectralLibrarySearch")
        self.actionSpectralLibraryMatch = QtWidgets.QAction(MainWindow)
        self.actionSpectralLibraryMatch.setObjectName("actionSpectralLibraryMatch")
        self.actionMenuAbout = QtWidgets.QAction(MainWindow)
        self.actionMenuAbout.setObjectName("actionMenuAbout")
        self.menuPreprocessing.addAction(self.actionLoad_Preprocessing)
        self.menuPreprocessing.addAction(self.actionNewResampling)
        self.menuPreprocessing.addAction(self.actionVisualizer)
        self.menuSpectralIndices.addAction(self.actionSpectral_Indices)
        self.menuSpectralIndices.addAction(self.actionSVCSpectral_Indices)
        self.menuSpectralIndices.addAction(self.actionCSVSpectral_Indices)
        self.menuRegression.addAction(self.actionUnivariate_Regression)
        self.menuRegression.addAction(self.actionMultivariate_Regression)
        self.menuDimensionality_Reduction.addAction(self.actionDimension_Reduction)
        self.menuClassification.addAction(self.actionSpectral_Distance)
        self.menuClassification.addAction(self.actionClassification)
        self.menuImageUtility.addAction(self.actionFgcc)
        self.menuSimulation.addAction(self.actionPy6sTimeSeries)
        self.menuSimulation.addAction(self.actionProsail)
        self.menuSimulation.addAction(self.actionSpectraSimulation)
        self.menuSpectralLibrary.addAction(self.actionSpectralLibrarySearch)
        self.menuSpectralLibrary.addAction(self.actionSpectralLibraryMatch)
        self.menutToolAbout_Help.addAction(self.actionMenuAbout)
        self.menuTimeSeries.addAction(self.actionTimeSeries)
        self.menuFile.addAction(self.actionView_Data)
        self.menuFile.addAction(self.actionNewSigreader)
        self.menuFile.addAction(self.actionspectraevolutionreader)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuPreprocessing.menuAction())
        self.menubar.addAction(self.menuSpectralIndices.menuAction())
        self.menubar.addAction(self.menuRegression.menuAction())
        self.menubar.addAction(self.menuDimensionality_Reduction.menuAction())
        self.menubar.addAction(self.menuClassification.menuAction())
        self.menubar.addAction(self.menuTimeSeries.menuAction())
        self.menubar.addAction(self.menuImageUtility.menuAction())
        self.menubar.addAction(self.menuSimulation.menuAction())
        self.menubar.addAction(self.menuSpectralLibrary.menuAction())
        self.menubar.addAction(self.menutToolAbout_Help.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Proximal Data Analysis"))
        self.textBrowser.setToolTip(_translate("MainWindow", "<html><head/><body><p>Console window<br/>This window gives you information about your running module<br/>Errors will also show up here, if they occur</p></body></html>"))
        self.progressBar.setToolTip(_translate("MainWindow", "<html><head/><body><p>Your current progression.</p></body></html>"))
        self.progressBar.setFormat(_translate("MainWindow", "%p%"))
        self.okPushButton.setToolTip(_translate("MainWindow", "<html><head/><body><p>Re-run your last run module</p></body></html>"))
        self.okPushButton.setText(_translate("MainWindow", "Run"))
        self.stopPushButton.setToolTip(_translate("MainWindow", "<html><head/><body><p>Completely stop the currently running module</p></body></html>"))
        self.stopPushButton.setText(_translate("MainWindow", "Stop"))
        self.deletePushButton.setToolTip(_translate("MainWindow", "<html><head/><body><p>Press this button when you are ready to run the modules in your workflow</p></body></html>"))
        self.deletePushButton.setWhatsThis(_translate("MainWindow", "Press this button when you\'re ready to run. (Ctrl+Enter)"))
        self.deletePushButton.setText(_translate("MainWindow", "Reset"))
        self.menuPreprocessing.setTitle(_translate("MainWindow", "Visualize && Preprocessing"))
        self.menuSpectralIndices.setTitle(_translate("MainWindow", "Spectral Indices"))
        self.menuRegression.setTitle(_translate("MainWindow", "Regression"))
        self.menuDimensionality_Reduction.setTitle(_translate("MainWindow", "Dimensionality Reduction"))
        self.menuClassification.setTitle(_translate("MainWindow", "Classification"))
        self.menuImageUtility.setTitle(_translate("MainWindow", "Image Utility"))
        self.menuSimulation.setTitle(_translate("MainWindow", "Simulation"))
        self.menuSpectralLibrary.setTitle(_translate("MainWindow", "Spectral Library"))
        self.menutToolAbout_Help.setTitle(_translate("MainWindow", "Help"))
        self.menuTimeSeries.setTitle(_translate("MainWindow", "Timeseries Visualize && Analysis "))
        self.menuFile.setTitle(_translate("MainWindow", "Data Management"))
        self.actionLoad_Preprocessing.setText(_translate("MainWindow", "Preprocessing"))
        self.actionView_Data.setText(_translate("MainWindow", "ASD Spectroradiometer"))
        self.actionSpectral_Indices.setText(_translate("MainWindow", "ASD Spectral Indices"))
        self.actionMultivariate_Regression.setText(_translate("MainWindow", "Multivariate Regression"))
        self.actionUnivariate_Regression.setText(_translate("MainWindow", "Univariate Regression"))
        self.actionNewResampling.setText(_translate("MainWindow", "Resampling"))
        self.actionDimension_Reduction.setText(_translate("MainWindow", "Dimension Reduction"))
        self.actionSpectral_Distance.setText(_translate("MainWindow", "Spectral Distance"))
        self.actionClassification.setText(_translate("MainWindow", "Supervised Classification "))
        self.actionTimeSeries.setText(_translate("MainWindow", "Time Series"))
        self.actionNewSigreader.setText(_translate("MainWindow", "SVC Spectroradiometer"))
        self.actionspectraevolutionreader.setText(_translate("MainWindow", "Spectral Evolution Spectroradiometer"))
        self.actionVisualizer.setText(_translate("MainWindow", "Visualizer"))
        self.actionSVCSpectral_Indices.setText(_translate("MainWindow", "SVC Spectral Indices"))
        self.actionCSVSpectral_Indices.setText(_translate("MainWindow", "Generic"))
        self.actionFgcc.setText(_translate("MainWindow", "Fractional Green Canopy Cover"))
        self.actionPy6sTimeSeries.setText(_translate("MainWindow", "Python-6s"))
        self.actionProsail.setText(_translate("MainWindow", "PROSAIL"))
        self.actionSpectraSimulation.setText(_translate("MainWindow", "Spectral Mixing"))
        self.actionSpectralLibrarySearch.setText(_translate("MainWindow", "Spectral Library Search"))
        self.actionSpectralLibraryMatch.setText(_translate("MainWindow", "Spectral Library Match"))
        self.actionMenuAbout.setText(_translate("MainWindow", "About SDAT"))

